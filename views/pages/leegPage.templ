package pages

import (
    "leeg/model"
    "leeg/views/components"
	"fmt"
)

templ LeegPage(leeg model.Leeg){
    @Base() {
        @LeegHeader(leeg)
        @LeegTeams(leeg.TeamsMap, leeg.GetRankedTeamsList(), leeg.RecordsMap)
        @LeegRounds(leeg.Rounds)
    }
}

templ LeegHeader(leeg model.Leeg) {
    <span class="flex flex-row p-2">
        <span class="flex flex-col w-auto h-auto align-center justify-center font-bold mt-2 my-2">
            <a href="/" class="flex items-center justify-center w-[30px] h-[30px] text-white text-lg font-bold no-underline bg-black border rounded-full border-black">L</a>
        </span>
        <span class="mt-2 mx-auto text-4xl">{leeg.Name}</span>
    </span>
}

templ LeegTeams(teams map[string]model.Team, rankedTeams model.EntityRefList, recordsMap model.RecordsMap) {
    <span class="w-full flex flex-row">
        <span class="w-full flex flex-col pt-3 items-center">
            <ul class="w-full pl-4 pr-4">

                for _, rankedTeam := range rankedTeams {
                    @components.Team(teams[rankedTeam.ID], recordsMap[rankedTeam.ID], false)
                }
            </ul>
            <span class="flex flex-row align-center items-center">
                <span class="mx-auto w-[200px] uk-button uk-button-default"
                        hx-put={fmt.Sprintf("/leegs/{leegID}/sort")}
                        hx-target={fmt.Sprintf("")}
                >
                    Sort
                </span>
            </span>
        </span>
    </span>
}

templ LeegRounds(rounds model.EntityRefList) {
    <span class="mx-auto min-w-[500px] max-w-[600px]flex flex-row">
        <span class="flex flex-col items-center m-1">
            <span class="items-center">
                for _, round := range rounds {
                    @components.RoundContainer(round)
                }
            </span>
        </span>
    </span>
}